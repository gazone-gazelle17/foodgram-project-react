version: '3.3'
services:
  db:
    image: postgres:13.0-alpine
    ports:
      - '5432:5432'
    volumes:
      - pg_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: foodgram
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    env_file: ../backend/.env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - media:/app/media
      - static:/app/static
    command: >
      bash -c "./manage.py collectstatic --noinput && ./manage.py migrate && gunicorn -b 0.0.0.0:8000 foodgram.wsgi"
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - ../frontend/:/app/result_build/
  nginx:
    image: nginx:1.19.3
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - media:/var/media
      - static:/var/static
    depends_on:
      - backend
      - frontend
volumes:
  static: 
  media:
  pg_data:
